


version: "3"
services:
  nginx:
    container_name: "addtional_webservice"
    image: "nginx:alpine"
    ports:
      - "8080:80"
    restart: "always"
    volumes:
      - /mnt/blk_gp2_5g/index.html:/usr/share/nginx/html/index.html




# docker-compose.yml
version: '3'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}

services:
  prometheus:
    image: prom/prometheus
    container_name: monitoring_prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: monitoring_grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Skills53
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - '3000:3000'
    networks:
      - monitoring
  node_exporter:
    container_name: 'monitoring_node_exporter'
    volumes:
      - /:/host:ro  
    #CHANGING THE ROOT , PROC , SYS FILE SYSTEMS
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
    networks:
      - monitoring
    image: prom/node-exporter
    ports:
      - '9100:9100'

global:
  scrape_interval: 1m

scrape_configs:
  - job_name: "prometheus"
    scrape_interval: 1m
    static_configs:
      - targets: ["prometheus:9090"]

  - job_name: "node"
    static_configs:
      - targets: ["node_exporter:9100"]

# Elastic Load Balancer

```
rm /etc/nginx/sites-enabled/default
vim /etc/nginx/sites-enabled/default

# default
server {
  listen 80;
  location / {
     proxy_read_timeout 4;
     proxy_pass http://myapp1; 
  }
}
```
Edit the `/etc/nginx/nginx.conf` file in the `http` block:
```
upstream myapp1 {
          server websrv1 max_fails=10;
          server websrv2 max_fails=10;
        }
```
Set the domains of webservers with the ips in `/etc/hosts`:
```
192.168.122.67 websrv1
192.168.122.68 websrv2 
```
Restart the nginx service:
```
systemctl restart nginx
```
